stages:
  - protos
  - build
  - release
  - test

variables:
  GIT_DEPTH: 1
  RELEASE_BRANCH: develop
  GRPC_TAG: $CI_REGISTRY/couchers/grpc:latest
  PROXY_IMAGE: $CI_REGISTRY_IMAGE/proxy:latest
  BACKEND_IMAGE: $CI_REGISTRY_IMAGE/backend:latest
  MEDIA_IMAGE: $CI_REGISTRY_IMAGE/media:latest
  FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend:latest
  PROXY_TAG: $CI_REGISTRY_IMAGE/proxy:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  BACKEND_TAG: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  MEDIA_TAG: $CI_REGISTRY_IMAGE/media:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  FRONTEND_TAG: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

default:
  image: docker
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

protos:
  stage: protos
  image: $GRPC_TAG
  inherit:
    # the grpc container doesn't have docker, no need to login
    default: false
  script:
    - cd app && ./generate_protos.sh
  rules:
    - changes:
      - app/
  artifacts:
    paths:
      - app/

build:backend:
  stage: build
  script:
    - docker build -t $BACKEND_TAG app/backend/
    - docker push $BACKEND_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == $RELEASE_BRANCH'
      changes:
      - app/
    - if: '$CI_COMMIT_BRANCH != $RELEASE_BRANCH'
      changes:
      - app/pb/
      - app/backend/


test:backend:
  stage: test
  image: $BACKEND_TAG
  inherit:
    # no docker login
    default: false
  services:
    - postgres:12
  variables:
    POSTGRES_PASSWORD: c765064a49d18a95
    DATABASE_CONNECTION_STRING: "postgresql://postgres:c765064a49d18a95@postgres/postgres"
  script:
    - cd /app && pytest src --junitxml=test-results/junit.xml
  artifacts:
    paths:
      - /app/test-results/
  rules:
    - if: '$CI_COMMIT_BRANCH == $RELEASE_BRANCH'
      changes:
      - app/
    - if: '$CI_COMMIT_BRANCH != $RELEASE_BRANCH'
      changes:
      - app/pb/
      - app/media/

